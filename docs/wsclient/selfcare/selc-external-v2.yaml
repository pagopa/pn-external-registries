openapi: 3.0.1
info:
  title: External API service
  description: This service is the proxy for external services
  version: v2
servers:
  - url: https://api.uat.selfcare.pagopa.it/external/v2
paths:
  /institutions:
    get:
      tags:
        - institutions
      summary: getInstitutions
      description: The service retrieves all the onboarded institutions related to the provided user and the product retrieved from Subscription Key
      operationId: getInstitutionsUsingGET
      parameters:
        - name: userIdForAuth
          in: query
          description: User's unique identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InstitutionResource'
              example:
                - address: string
                  aooParentCode: string
                  assistanceContacts:
                    supportEmail: string
                    supportPhone: string
                  companyInformations:
                    businessRegisterPlace: string
                    rea: string
                    shareCapital: string
                  description: string
                  digitalAddress: string
                  dpoData:
                    address: string
                    email: email@example.com
                    pec: email@example.com
                  externalId: string
                  id: string
                  institutionType: GSP
                  origin: string
                  originId: string
                  rootParent:
                    description: string
                    id: string
                  pspData:
                    abiCode: string
                    businessRegisterNumber: string
                    legalRegisterName: string
                    legalRegisterNumber: string
                    vatNumberGroup: false
                  recipientCode: string
                  status: string
                  subunitCode: string
                  subunitType: string
                  taxCode: string
                  userProductRoles:
                    - string
                  zipCode: string
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
              example:
                detail: string
                instance: string
                invalidParams:
                  - name: string
                    reason: string
                status: 500
                title: string
                type: string
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
              example:
                detail: string
                instance: string
                invalidParams:
                  - name: string
                    reason: string
                status: 500
                title: string
                type: string
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
              example:
                detail: string
                instance: string
                invalidParams:
                  - name: string
                    reason: string
                status: 500
                title: string
                type: string
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
              example:
                detail: string
                instance: string
                invalidParams:
                  - name: string
                    reason: string
                status: 500
                title: string
                type: string
  /user-groups:
    get:
      tags:
        - user-group
      summary: getUserGroups
      description: Service that allows to get a list of UserGroup entities
      operationId: getUserGroupsUsingGET
      parameters:
        - name: institutionId
          in: query
          description: Users group's institutionId
          schema:
            type: string
        - name: page
          in: query
          description: 'Format - int32. The page number to access (0 indexed, defaults to 0)'
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          description: 'Format - int32. Number of records per page (defaults to 20, max 2000)'
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: 'Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.'
          schema:
            type: array
            items:
              type: string
        - name: userId
          in: query
          description: Format - uuid. Member's unique identifier
          schema:
            type: string
            format: uuid
        - name: status
          in: query
          description: 'If filter on status is present, it must be used with at least one of the other filters'
          schema:
            enum:
              - ACTIVE
              - SUSPENDED
              - DELETED
            type: string
        - name: x-selfcare-uid
          in: header
          description: Logged user's unique identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageOfUserGroupResource'
              example:
                content:
                  - description: string
                    id: string
                    institutionId: string
                    name: string
                    productId: string
                    status: ACTIVE
                number: 0
                size: 0
                totalElements: 0
                totalPages: 0
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
              example:
                detail: string
                instance: string
                invalidParams:
                  - name: string
                    reason: string
                status: 500
                title: string
                type: string
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
              example:
                detail: string
                instance: string
                invalidParams:
                  - name: string
                    reason: string
                status: 500
                title: string
                type: string
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
              example:
                detail: string
                instance: string
                invalidParams:
                  - name: string
                    reason: string
                status: 500
                title: string
                type: string
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
              example:
                detail: string
                instance: string
                invalidParams:
                  - name: string
                    reason: string
                status: 500
                title: string
                type: string
components:
  schemas:
    InvalidParam:
      title: InvalidParam
      required:
        - name
        - reason
      type: object
      properties:
        name:
          type: string
          description: Invalid parameter name.
        reason:
          type: string
          description: Invalid parameter reason.
    Problem:
      title: Problem
      required:
        - status
        - title
      type: object
      properties:
        detail:
          type: string
          description: Human-readable description of this specific problem.
        instance:
          type: string
          description: A URI that describes where the problem occurred.
        invalidParams:
          type: array
          items:
            $ref: '#/components/schemas/InvalidParam'
          description: A list of invalid parameters details.
        status:
          type: integer
          description: The HTTP status code.
          format: int32
          example: 500
        title:
          type: string
          description: Short human-readable summary of the problem.
        type:
          type: string
          description: A URL to a page with more details regarding the problem.
      description: A "problem detail" as a way to carry machine-readable details of errors (https://datatracker.ietf.org/doc/html/rfc7807)
    PageOfUserGroupResource:
      title: PageOfUserGroupResource
      required:
        - content
        - number
        - size
        - totalElements
        - totalPages
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/UserGroupResource'
          description: The page content
        number:
          type: integer
          description: The number of the current page
          format: int32
        size:
          type: integer
          description: The size of the page
          format: int32
        totalElements:
          type: integer
          description: The total amount of elements
          format: int64
        totalPages:
          type: integer
          description: The number of total pages
          format: int32
    UserGroupResource:
      title: UserGroupResource
      required:
        - description
        - id
        - institutionId
        - name
        - productId
        - status
      type: object
      properties:
        description:
          type: string
          description: Users group's description
        id:
          type: string
          description: Users group's unique identifier
        institutionId:
          type: string
          description: Users group's institutionId
        name:
          type: string
          description: Users group's name
        productId:
          type: string
          description: Users group's productId
        status:
          enum:
            - ACTIVE
            - SUSPENDED
            - DELETED
          type: string
          description: Users group's status
    InstitutionResource:
      title: InstitutionResource
      type: object
      properties:
        address:
          type: string
          description: Institution's physical address
        aooParentCode:
          type: string
          description: AOO unit parent institution Code
        assistanceContacts:
          $ref: '#/components/schemas/AssistanceContactsResource'
        companyInformations:
          $ref: '#/components/schemas/CompanyInformationsResource'
        description:
          type: string
          description: Institution's legal name
        digitalAddress:
          type: string
          description: Institution's digitalAddress
        dpoData:
          $ref: '#/components/schemas/DpoDataResource'
        externalId:
          type: string
          description: Institution's unique external identifier
        id:
          type: string
          description: Institution's unique internal Id
          format: uuid
        institutionType:
          enum:
            - GSP
            - PA
            - PG
            - PSP
            - PT
            - SCP
          type: string
          description: Institution's type
        origin:
          type: string
          description: Institution data origin
        originId:
          type: string
          description: Institution's details origin Id
        rootParent:
          $ref: '#/components/schemas/RootParentResource'
        pspData:
          $ref: '#/components/schemas/PspDataResource'
        recipientCode:
          type: string
          description: Billing recipient code
        status:
          type: string
          description: Institution onboarding status
        subunitCode:
          type: string
          description: Institutions AOO/UO unit Code
        subunitType:
          type: string
          description: Institutions AOO/UO unit type
        taxCode:
          type: string
          description: Institution's taxCode
        userProductRoles:
          type: array
          items:
            type: string
          description: Logged user's roles on product
        zipCode:
          type: string
          description: Institution's zipCode
    CompanyInformationsResource:
      title: CompanyInformationsResource
      type: object
      properties:
        businessRegisterPlace:
          type: string
          description: Institution's business register place
        rea:
          type: string
          description: Institution's REA
        shareCapital:
          type: string
          description: Institution's share capital value
    DpoDataResource:
      title: DpoDataResource
      type: object
      properties:
        address:
          type: string
          description: DPO's address
        email:
          type: string
          description: DPO's email
          format: email
          example: email@example.com
        pec:
          type: string
          description: DPO's PEC
          format: email
          example: email@example.com
    AssistanceContactsResource:
      title: AssistanceContactsResource
      type: object
      properties:
        supportEmail:
          type: string
          description: Institution's support email contact
        supportPhone:
          type: string
          description: Institution's support phone contact
    RootParentResource:
      title: RootParentResource
      type: object
      properties:
        description:
          type: string
          description: swagger.external_api.institutions.model.parentDescription
        id:
          type: string
          description: Institution's unique internal Id
    PspDataResource:
      title: PspDataResource
      type: object
      properties:
        abiCode:
          type: string
          description: PSP's ABI code
        businessRegisterNumber:
          type: string
          description: PSP's Business Register number
        legalRegisterName:
          type: string
          description: PSP's legal register name
        legalRegisterNumber:
          type: string
          description: PSP's legal register number
        vatNumberGroup:
          type: boolean
          description: PSP's Vat Number group
          example: false
  securitySchemes:
    apiKeyHeader:
      type: apiKey
      name: Ocp-Apim-Subscription-Key
      in: header
    apiKeyQuery:
      type: apiKey
      name: subscription-key
      in: query
security:
  - apiKeyHeader: [ ]
  - apiKeyQuery: [ ]
tags:
  - name: selc-external
    description: SelfCare Controller
