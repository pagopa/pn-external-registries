openapi: 3.0.1
info:
  title: External API service
  description: This service is the proxy for external services
  version: v1
servers:
  - url: https://api.uat.selfcare.pagopa.it/external/v1
paths:
  /institutions:
    get:
      tags:
        - institutions
      summary: getInstitutions
      description: The service retrieves all the onboarded institutions related to the logged user
      operationId: getInstitutionsUsingGET
      parameters:
        - name: productId
          in: query
          description: Product's unique identifier
          required: true
          schema:
            type: string
        - name: x-selfcare-uid
          in: header
          description: Logged user's unique identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InstitutionResource'
              example:
                - address: string
                  description: string
                  digitalAddress: string
                  externalId: string
                  id: string
                  institutionType: GSP
                  origin: string
                  originId: string
                  status: string
                  taxCode: string
                  userProductRoles:
                    - string
                  zipCode: string
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
              example:
                detail: string
                instance: string
                invalidParams:
                  - name: string
                    reason: string
                status: 500
                title: string
                type: string
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
              example:
                detail: string
                instance: string
                invalidParams:
                  - name: string
                    reason: string
                status: 500
                title: string
                type: string
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
              example:
                detail: string
                instance: string
                invalidParams:
                  - name: string
                    reason: string
                status: 500
                title: string
                type: string
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
              example:
                detail: string
                instance: string
                invalidParams:
                  - name: string
                    reason: string
                status: 500
                title: string
                type: string
  '/institutions/{institutionId}/products':
    get:
      tags:
        - institutions
      summary: getInstitutionUserProducts
      description: Service to retrieve all active products for given institution and logged user
      operationId: getInstitutionUserProductsUsingGET
      parameters:
        - name: institutionId
          in: path
          description: Institution's unique internal Id
          required: true
          schema:
            type: string
        - name: x-selfcare-uid
          in: header
          description: Logged user's unique identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductResource'
              example:
                - description: string
                  id: string
                  title: string
                  urlBO: string
                  urlPublic: string
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
              example:
                detail: string
                instance: string
                invalidParams:
                  - name: string
                    reason: string
                status: 500
                title: string
                type: string
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
              example:
                detail: string
                instance: string
                invalidParams:
                  - name: string
                    reason: string
                status: 500
                title: string
                type: string
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
              example:
                detail: string
                instance: string
                invalidParams:
                  - name: string
                    reason: string
                status: 500
                title: string
                type: string
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
              example:
                detail: string
                instance: string
                invalidParams:
                  - name: string
                    reason: string
                status: 500
                title: string
                type: string
  '/institutions/{id}':
    get:
      tags:
        - institutions
      summary: Gets the corresponding institution using internal institution id
      description: Gets institution using internal institution id
      operationId: getInstitution
      parameters:
        - name: id
          in: path
          description: Format - uuid. The internal identifier of the institution
          required: true
          schema:
            type: string
            format: uuid
        - name: x-selfcare-uid
          in: header
          description: Logged user's unique identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Institution'
              example:
                id: 97c0f418-bcb3-48d4-825a-fe8b29ae68e5
                externalId: c_f205
                originId: c_f205
                description: AGENCY X
                digitalAddress: email@pec.mail.org
                address: via del campo
                zipCode: '20100'
                taxCode: string
                origin: IPA
                institutionType: PA
                attributes:
                  - origin: string
                    code: string
                    description: string
                logo: string
        '400':
          description: Invalid id supplied
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
              example:
                detail: string
                instance: string
                invalidParams:
                  - name: string
                    reason: string
                status: 500
                title: string
                type: string
        '404':
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
              example:
                detail: string
                instance: string
                invalidParams:
                  - name: string
                    reason: string
                status: 500
                title: string
                type: string
components:
  schemas:
    InstitutionResource:
      title: InstitutionResource
      required:
        - address
        - description
        - digitalAddress
        - externalId
        - id
        - institutionType
        - origin
        - originId
        - status
        - taxCode
        - userProductRoles
        - zipCode
      type: object
      properties:
        address:
          type: string
          description: Institution's physical address
        description:
          type: string
          description: Institution's legal name
        digitalAddress:
          type: string
          description: Institution's digitalAddress
        externalId:
          type: string
          description: Institution's unique external identifier
        id:
          type: string
          description: Institution's unique internal Id
          format: uuid
        institutionType:
          enum:
            - GSP
            - PA
            - PT
            - SCP
          type: string
          description: Institution's type
        origin:
          type: string
          description: Institution data origin
        originId:
          type: string
          description: Institution's details origin Id
        status:
          type: string
          description: Institution onboarding status
        taxCode:
          type: string
          description: Institution's taxCode
        userProductRoles:
          type: array
          items:
            type: string
          description: Logged user's roles on product
        zipCode:
          type: string
          description: Institution's zipCode
    InvalidParam:
      title: InvalidParam
      required:
        - name
        - reason
      type: object
      properties:
        name:
          type: string
          description: Invalid parameter name.
        reason:
          type: string
          description: Invalid parameter reason.
    Problem:
      title: Problem
      required:
        - status
        - title
      type: object
      properties:
        detail:
          type: string
          description: Human-readable description of this specific problem.
        instance:
          type: string
          description: A URI that describes where the problem occurred.
        invalidParams:
          type: array
          items:
            $ref: '#/components/schemas/InvalidParam'
          description: A list of invalid parameters details.
        status:
          type: integer
          description: The HTTP status code.
          format: int32
          example: 500
        title:
          type: string
          description: Short human-readable summary of the problem.
        type:
          type: string
          description: A URL to a page with more details regarding the problem.
      description: A "problem detail" as a way to carry machine-readable details of errors (https://datatracker.ietf.org/doc/html/rfc7807)
    ProductResource:
      title: ProductResource
      required:
        - description
        - id
        - title
        - urlBO
      type: object
      properties:
        description:
          type: string
          description: Product's description
        id:
          type: string
          description: Product's unique identifier
        title:
          type: string
          description: Product's title
        urlBO:
          type: string
          description: 'URL that redirects to the back-office section, where is possible to manage the product'
        urlPublic:
          type: string
          description: URL that redirects to the public information webpage of the product
    Institution:
      required:
        - id
        - externalId
        - originId
        - description
        - digitalAddress
        - address
        - zipCode
        - taxCode
        - attributes
        - origin
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 97c0f418-bcb3-48d4-825a-fe8b29ae68e5
        externalId:
          type: string
          description: external institution id
          example: c_f205
        originId:
          type: string
          description: origin institution id (e.g iPA code)
          example: c_f205
        description:
          type: string
          example: AGENCY X
        digitalAddress:
          type: string
          format: email
          example: email@pec.mail.org
        address:
          type: string
          example: via del campo
        zipCode:
          type: string
          example: '20100'
        taxCode:
          type: string
          description: institution tax code
        origin:
          type: string
          description: The origin form which the institution has been retrieved
          example: IPA
        institutionType:
          type: string
          description: institution type
          example: PA
        attributes:
          $ref: '#/components/schemas/Attributes'
        logo:
          type: string
          description: URL to institution logo
          format: url
      additionalProperties: false
    Attribute:
      required:
        - origin
        - code
        - description
      type: object
      properties:
        origin:
          type: string
        code:
          type: string
        description:
          type: string
    Attributes:
      type: array
      items:
        $ref: '#/components/schemas/Attribute'
  securitySchemes:
    apiKeyHeader:
      type: apiKey
      name: Ocp-Apim-Subscription-Key
      in: header
    apiKeyQuery:
      type: apiKey
      name: subscription-key
      in: query
security:
  - apiKeyHeader: [ ]
  - apiKeyQuery: [ ]
tags:
  - name: institutions
    description: Institution Controller
