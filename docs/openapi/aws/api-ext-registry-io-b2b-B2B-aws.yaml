openapi: 3.0.1
info:
  title: >-
    ${stageVariables.ProjectName}-${stageVariables.MicroServiceUniqueName}-${stageVariables.IntendedUsage}
  version: vFYL9HRp+z4mpzLyCljgQ+4jssOsYbPDiA57iK8emUM=
servers:
  - url: https://${stageVariables.DnsName}/{basePath}
    variables:
      basePath:
        default: /${stageVariables.ServiceApiPath}
    x-amazon-apigateway-endpoint-configuration:
      disableExecuteApiEndpoint: true
paths: {}
components:
  parameters:
    cxTaxIdAuthFleet:
      name: x-pagopa-cx-taxid
      in: header
      description: Customer taxId, used in B2B AppIO.
      required: true
      schema:
        type: string
        minLength: 16
        maxLength: 16
        pattern: >-
          ^[A-Z]{6}[0-9LMNPQRSTUV]{2}[A-Z]{1}[0-9LMNPQRSTUV]{2}[A-Z]{1}[0-9LMNPQRSTUV]{3}[A-Z]{1}
  schemas:
    NotificationDisclaimerResponse:
      type: object
      required:
        - messageId
        - valid
      properties:
        messageId:
          type: string
  responses: {}
  securitySchemes:
    api_key_openapi:
      type: apiKey
      name: x-api-key
      in: header
    pn-auth-fleet_ApiKeyAuthorizerV2_openapi:
      type: apiKey
      name: x-api-key
      in: header
      x-amazon-apigateway-authtype: custom
      x-amazon-apigateway-authorizer:
        authorizerUri: >-
          arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:pn-ApiKeyAuthorizerV2Lambda/invocations
        authorizerResultTtlInSeconds: 300
        identitySource: method.request.header.x-api-key
        type: request
tags:
  - name: IO
    description: API chiamate da IO
x-amazon-apigateway-gateway-responses:
  DEFAULT_5XX:
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Origin: '''*'''
  DEFAULT_4XX:
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Origin: '''*'''
  BAD_REQUEST_PARAMETERS:
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Origin: '''*'''
    responseTemplates:
      application/json: >-
        {"status": 400, "title": "VALIDATION ERROR", "traceId":
        "$context.xrayTraceId", "errors": [ { "code": "PN_INVALID_PARAMETERS",
        "detail": "Validation errors: $context.error.validationErrorString" } ]}
  BAD_REQUEST_BODY:
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Origin: '''*'''
    responseTemplates:
      application/json: >-
        {"status": 400, "title": "VALIDATION ERROR", "traceId":
        "$context.xrayTraceId", "errors": [ { "code": "PN_INVALID_BODY",
        "detail": "Validation errors: $context.error.validationErrorString" } ]}
x-amazon-apigateway-request-validators:
  basic:
    validateRequestBody: true
    validateRequestParameters: true
  params-only:
    validateRequestBody: false
    validateRequestParameters: true
x-amazon-apigateway-request-validator: basic
