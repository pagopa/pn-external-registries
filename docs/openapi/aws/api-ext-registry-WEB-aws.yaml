openapi: 3.0.1
info:
  title: >-
    ${stageVariables.ProjectName}-${stageVariables.MicroServiceUniqueName}-${stageVariables.IntendedUsage}
  version: VvdlhJvyZUXR4jvMP5SXaql74NOzXs28DBO6GUGRjGE=
servers:
  - url: https://${stageVariables.DnsName}/{basePath}
    variables:
      basePath:
        default: /${stageVariables.ServiceApiPath}
    x-amazon-apigateway-endpoint-configuration:
      disableExecuteApiEndpoint: true
paths:
  /pa/v1/activated-on-pn:
    get:
      operationId: listOnboardedPa
      summary: List PA that use PN
      description: >-
        Use with API to implement PA choose in domicile and mandate creation
        pages.
      tags:
        - InfoPA
      security:
        - pn-auth-fleet_jwtAuthorizer_openapi: []
      parameters:
        - name: paNameFilter
          description: Se valorizzato indica il prefisso della denominazione della PA
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/PaNameFilter'
        - name: id
          description: >-
            Se valorizzato indica gli id delle PA di cui si vuole la
            denominazione
          in: query
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/SelfCarePaId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaSummariesList'
        '400':
          description: Invalid input
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/pa/v1/activated-on-pn
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters:
          integration.request.header.x-pagopa-pn-cx-id: context.authorizer.cx_id
          integration.request.header.x-pagopa-pn-cx-role: context.authorizer.cx_role
          integration.request.header.x-pagopa-pn-uid: context.authorizer.uid
          integration.request.header.x-pagopa-pn-jti: context.authorizer.cx_jti
          integration.request.header.x-pagopa-pn-cx-type: context.authorizer.cx_type
          integration.request.header.x-pagopa-pn-cx-groups: context.authorizer.cx_groups
          integration.request.header.x-pagopa-pn-src-ch-details: context.authorizer.sourceChannelDetails
          integration.request.header.x-pagopa-pn-src-ch: '''WEB'''
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
    options:
      operationId: Options for /pa/v1/activated-on-pn API CORS
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/pa/v1/activated-on-pn
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters: {}
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
  /pa/v1/groups:
    get:
      operationId: getGroups
      summary: Retrieve group of current user defined in Self Care
      description: >
        PA can use groups to better organize work in its organization. Return
        the PaGroupList of the current user, or if the user isn't in some group,
        all the groups of the current PA
      tags:
        - InfoPA
      security:
        - pn-auth-fleet_jwtAuthorizer_openapi: []
      parameters:
        - name: statusFilter
          description: Se valorizzato indica di tornare solo i gruppi nello stato passato
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/PaGroupStatus'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaGroupList'
        '400':
          description: Invalid input
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/pa/v1/groups
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters:
          integration.request.header.x-pagopa-pn-cx-id: context.authorizer.cx_id
          integration.request.header.x-pagopa-pn-cx-role: context.authorizer.cx_role
          integration.request.header.x-pagopa-pn-uid: context.authorizer.uid
          integration.request.header.x-pagopa-pn-jti: context.authorizer.cx_jti
          integration.request.header.x-pagopa-pn-cx-type: context.authorizer.cx_type
          integration.request.header.x-pagopa-pn-cx-groups: context.authorizer.cx_groups
          integration.request.header.x-pagopa-pn-src-ch-details: context.authorizer.sourceChannelDetails
          integration.request.header.x-pagopa-pn-src-ch: '''WEB'''
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
    options:
      operationId: Options for /pa/v1/groups API CORS
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/pa/v1/groups
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters: {}
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
  /pg/v1/groups:
    get:
      operationId: getPgGroups
      summary: Retrieve group of current user defined in Self Care
      description: >
        PG can use groups to better organize work in its organization. Return
        the PgGroupList of the current user, or if the user isn't in some group,
        all the groups of the current PG
      tags:
        - InfoPG
      security:
        - pn-auth-fleet_jwtAuthorizer_openapi: []
      parameters:
        - name: statusFilter
          description: Se valorizzato indica di tornare solo i gruppi nello stato passato
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/PgGroupStatus'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PgGroupList'
        '400':
          description: Invalid input
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/pg/v1/groups
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters:
          integration.request.header.x-pagopa-pn-cx-id: context.authorizer.cx_id
          integration.request.header.x-pagopa-pn-cx-role: context.authorizer.cx_role
          integration.request.header.x-pagopa-pn-uid: context.authorizer.uid
          integration.request.header.x-pagopa-pn-jti: context.authorizer.cx_jti
          integration.request.header.x-pagopa-pn-cx-type: context.authorizer.cx_type
          integration.request.header.x-pagopa-pn-cx-groups: context.authorizer.cx_groups
          integration.request.header.x-pagopa-pn-src-ch-details: context.authorizer.sourceChannelDetails
          integration.request.header.x-pagopa-pn-src-ch: '''WEB'''
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
    options:
      operationId: Options for /pg/v1/groups API CORS
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/pg/v1/groups
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters: {}
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
  /pa/v1/institutions:
    get:
      operationId: getInstitutions
      summary: Retrieve institutions of current user defined in Self Care
      description: >
        Retrieves all the onboarded institutions related to the provided user
        and the product using selfcare API
      tags:
        - InfoPA
      security:
        - pn-auth-fleet_jwtAuthorizer_openapi: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstitutionResourceList'
        '400':
          description: Invalid input
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/pa/v1/institutions
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters:
          integration.request.header.x-pagopa-pn-cx-id: context.authorizer.cx_id
          integration.request.header.x-pagopa-pn-cx-role: context.authorizer.cx_role
          integration.request.header.x-pagopa-pn-uid: context.authorizer.uid
          integration.request.header.x-pagopa-pn-jti: context.authorizer.cx_jti
          integration.request.header.x-pagopa-pn-cx-type: context.authorizer.cx_type
          integration.request.header.x-pagopa-pn-cx-groups: context.authorizer.cx_groups
          integration.request.header.x-pagopa-pn-src-ch-details: context.authorizer.sourceChannelDetails
          integration.request.header.x-pagopa-pn-src-ch: '''WEB'''
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
      parameters: []
    options:
      operationId: Options for /pa/v1/institutions API CORS
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/pa/v1/institutions
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters: {}
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
  /pa/v1/user-institutions:
    get:
      operationId: getUserInstitutions
      summary: Retrieve user's institutions of current user defined in Self Care
      description: >
        Retrieves all the onboarded institutions related to the provided user
        and the product using selfcare API
      tags:
        - InfoPA
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstitutionResourceList'
        '400':
          description: Invalid input
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
        - pn-auth-fleet_jwtAuthorizer_openapi: []
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/pa/v1/user-institutions
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters:
          integration.request.header.x-pagopa-pn-cx-id: context.authorizer.cx_id
          integration.request.header.x-pagopa-pn-cx-role: context.authorizer.cx_role
          integration.request.header.x-pagopa-pn-uid: context.authorizer.uid
          integration.request.header.x-pagopa-pn-jti: context.authorizer.cx_jti
          integration.request.header.x-pagopa-pn-cx-type: context.authorizer.cx_type
          integration.request.header.x-pagopa-pn-cx-groups: context.authorizer.cx_groups
          integration.request.header.x-pagopa-pn-src-ch-details: context.authorizer.sourceChannelDetails
          integration.request.header.x-pagopa-pn-src-ch: '''WEB'''
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
      parameters: []
    options:
      operationId: Options for /pa/v1/user-institutions API CORS
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/pa/v1/user-institutions
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters: {}
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
  /pa/v1/institutions/{id}/products:
    get:
      operationId: getInstitutionProducts
      summary: Retrieve all active products for given institution and user
      description: >
        etrieve all active products for given institution and user using
        SelfCare API
      tags:
        - InfoPA
      security:
        - pn-auth-fleet_jwtAuthorizer_openapi: []
      parameters:
        - name: id
          description: The identifier of one PA
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/SelfCarePaId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResourceList'
        '400':
          description: Invalid input
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/pa/v1/institutions/{id}/products
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters:
          integration.request.header.x-pagopa-pn-cx-id: context.authorizer.cx_id
          integration.request.header.x-pagopa-pn-cx-role: context.authorizer.cx_role
          integration.request.header.x-pagopa-pn-uid: context.authorizer.uid
          integration.request.header.x-pagopa-pn-jti: context.authorizer.cx_jti
          integration.request.header.x-pagopa-pn-cx-type: context.authorizer.cx_type
          integration.request.header.x-pagopa-pn-cx-groups: context.authorizer.cx_groups
          integration.request.header.x-pagopa-pn-src-ch-details: context.authorizer.sourceChannelDetails
          integration.request.header.x-pagopa-pn-src-ch: '''WEB'''
          integration.request.path.id: method.request.path.id
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
    options:
      operationId: Options for /pa/v1/institutions/{id}/products API CORS
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/pa/v1/institutions/{id}/products
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters:
          integration.request.path.id: method.request.path.id
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
  /pagopa/v1/paymentinfo/{paTaxId}/{noticeNumber}:
    get:
      deprecated: true
      operationId: getPaymentInfo
      summary: Retrieve payment information
      description: >-
        Use to enable payment button in notification detail page and display
        amount
      tags:
        - PaymentInfo
      security:
        - pn-auth-fleet_jwtAuthorizer_openapi: []
      parameters:
        - name: paTaxId
          description: Payment PA fiscal code
          in: path
          required: true
          example: '77777777777'
          schema:
            $ref: '#/components/schemas/paTaxId'
        - name: noticeNumber
          description: Payment notice number  numero avviso
          in: path
          required: true
          example: '302000100000019421'
          schema:
            $ref: '#/components/schemas/noticeCode'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentInfo'
        '400':
          description: Invalid input
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/pagopa/v1/paymentinfo/{paTaxId}/{noticeNumber}
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters:
          integration.request.header.x-pagopa-pn-cx-id: context.authorizer.cx_id
          integration.request.header.x-pagopa-pn-cx-role: context.authorizer.cx_role
          integration.request.header.x-pagopa-pn-uid: context.authorizer.uid
          integration.request.header.x-pagopa-pn-jti: context.authorizer.cx_jti
          integration.request.header.x-pagopa-pn-cx-type: context.authorizer.cx_type
          integration.request.header.x-pagopa-pn-cx-groups: context.authorizer.cx_groups
          integration.request.header.x-pagopa-pn-src-ch-details: context.authorizer.sourceChannelDetails
          integration.request.header.x-pagopa-pn-src-ch: '''WEB'''
          integration.request.path.paTaxId: method.request.path.paTaxId
          integration.request.path.noticeNumber: method.request.path.noticeNumber
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
    options:
      operationId: Options for /pagopa/v1/paymentinfo/{paTaxId}/{noticeNumber} API CORS
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/pagopa/v1/paymentinfo/{paTaxId}/{noticeNumber}
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters:
          integration.request.path.paTaxId: method.request.path.paTaxId
          integration.request.path.noticeNumber: method.request.path.noticeNumber
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
  /pagopa/v2.1/paymentinfo:
    post:
      operationId: getPaymentInfoV21
      summary: Retrieve payment information given a list of payments identifiers
      description: >-
        Use to enable payment buttons in notification detail page and display
        amount
      tags:
        - PaymentInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentInfoRequests'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentInfoResponse'
        '400':
          description: Invalid input
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
        - pn-auth-fleet_jwtAuthorizer_openapi: []
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/pagopa/v2.1/paymentinfo
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters:
          integration.request.header.x-pagopa-pn-cx-id: context.authorizer.cx_id
          integration.request.header.x-pagopa-pn-cx-role: context.authorizer.cx_role
          integration.request.header.x-pagopa-pn-uid: context.authorizer.uid
          integration.request.header.x-pagopa-pn-jti: context.authorizer.cx_jti
          integration.request.header.x-pagopa-pn-cx-type: context.authorizer.cx_type
          integration.request.header.x-pagopa-pn-cx-groups: context.authorizer.cx_groups
          integration.request.header.x-pagopa-pn-src-ch-details: context.authorizer.sourceChannelDetails
          integration.request.header.x-pagopa-pn-src-ch: '''WEB'''
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
      parameters: []
    options:
      operationId: Options for /pagopa/v2.1/paymentinfo API CORS
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/pagopa/v2.1/paymentinfo
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters: {}
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
  /pagopa/v1/checkout-cart:
    post:
      operationId: checkoutCart
      summary: Make a payment
      description: Make a payment by calling the Checkout API
      tags:
        - PaymentInfo
      security:
        - pn-auth-fleet_jwtAuthorizer_openapi: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResponse'
        '400':
          description: Invalid input
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '422':
          description: Unprocessable Entity
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/pagopa/v1/checkout-cart
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters:
          integration.request.header.x-pagopa-pn-cx-id: context.authorizer.cx_id
          integration.request.header.x-pagopa-pn-cx-role: context.authorizer.cx_role
          integration.request.header.x-pagopa-pn-uid: context.authorizer.uid
          integration.request.header.x-pagopa-pn-jti: context.authorizer.cx_jti
          integration.request.header.x-pagopa-pn-cx-type: context.authorizer.cx_type
          integration.request.header.x-pagopa-pn-cx-groups: context.authorizer.cx_groups
          integration.request.header.x-pagopa-pn-src-ch-details: context.authorizer.sourceChannelDetails
          integration.request.header.x-pagopa-pn-src-ch: '''WEB'''
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
      parameters: []
    options:
      operationId: Options for /pagopa/v1/checkout-cart API CORS
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/pagopa/v1/checkout-cart
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters: {}
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
components:
  parameters: {}
  schemas:
    InstitutionResourceList:
      title: InstitutionResourceList
      description: Contains the list of institution defined in SelfCare PA
      type: array
      items:
        $ref: '#/components/schemas/InstitutionResourcePN'
    InstitutionResourcePN:
      title: InstitutionResourcePN
      type: object
      properties:
        address:
          type: string
          description: Institution's physical address
        aooParentCode:
          type: string
          description: AOO unit parent institution Code
        assistanceContacts:
          $ref: '#/components/schemas/AssistanceContactsResourcePN'
        companyInformations:
          $ref: '#/components/schemas/CompanyInformationsResourcePN'
        description:
          type: string
          description: Institution's legal name
        digitalAddress:
          type: string
          description: Institution's digitalAddress
        dpoData:
          $ref: '#/components/schemas/DpoDataResourcePN'
        externalId:
          type: string
          description: Institution's unique external identifier
        id:
          type: string
          description: Institution's unique internal Id
          format: uuid
        institutionType:
          enum:
            - GSP
            - PA
            - PG
            - PSP
            - PT
            - SCP
          type: string
          description: Institution's type
        origin:
          type: string
          description: Institution data origin
        originId:
          type: string
          description: Institution's details origin Id
        rootParent:
          $ref: '#/components/schemas/RootParentResourcePN'
        pspData:
          $ref: '#/components/schemas/PspDataResourcePN'
        recipientCode:
          type: string
          description: Billing recipient code
        status:
          type: string
          description: Institution onboarding status
        subunitCode:
          type: string
          description: Institutions AOO/UO unit Code
        subunitType:
          type: string
          description: Institutions AOO/UO unit type
        taxCode:
          type: string
          description: Institution's taxCode
        userProductRoles:
          type: array
          items:
            type: string
          description: Logged user's roles on product
        zipCode:
          type: string
          description: Institution's zipCode
    CompanyInformationsResourcePN:
      title: CompanyInformationsResourcePN
      type: object
      properties:
        businessRegisterPlace:
          type: string
          description: Institution's business register place
        rea:
          type: string
          description: Institution's REA
        shareCapital:
          type: string
          description: Institution's share capital value
    DpoDataResourcePN:
      title: DpoDataResourcePN
      type: object
      properties:
        address:
          type: string
          description: DPO's address
        email:
          type: string
          description: DPO's email
          format: email
          example: email@example.com
        pec:
          type: string
          description: DPO's PEC
          format: email
          example: email@example.com
    AssistanceContactsResourcePN:
      title: AssistanceContactsResourcePN
      type: object
      properties:
        supportEmail:
          type: string
          description: Institution's support email contact
        supportPhone:
          type: string
          description: Institution's support phone contact
    RootParentResourcePN:
      title: RootParentResourcePN
      type: object
      properties:
        description:
          type: string
          description: swagger.external_api.institutions.model.parentDescription
        id:
          type: string
          description: Institution's unique internal Id
    PspDataResourcePN:
      title: PspDataResourcePN
      type: object
      properties:
        abiCode:
          type: string
          description: PSP's ABI code
        businessRegisterNumber:
          type: string
          description: PSP's Business Register number
        legalRegisterName:
          type: string
          description: PSP's legal register name
        legalRegisterNumber:
          type: string
          description: PSP's legal register number
        vatNumberGroup:
          type: boolean
          description: PSP's Vat Number group
          example: false
    PaNameFilter:
      title: Admitted character for PA denomination field
      type: string
      minLength: 3
      maxLength: 250
      pattern: ^([\x20-\xFF]{1,250})$
    PaSummary:
      title: PA in short
      description: PA with minimal information
      type: object
      required:
        - id
        - name
      properties:
        id:
          $ref: '#/components/schemas/SelfCarePaId'
        name:
          type: string
    PaSummariesList:
      title: Brief list of PAs
      description: Contains a list of PA with minimal information
      type: array
      items:
        $ref: '#/components/schemas/PaSummary'
    PaInfo:
      title: PA Info by IPA
      description: Denomination, fiscal code, pec, email, tel, www site, ...
      type: object
      required:
        - id
        - name
        - taxId
        - generalContacts
      properties:
        id:
          $ref: '#/components/schemas/SelfCarePaId'
        name:
          type: string
          minLength: 1
        taxId:
          description: codice fiscale
          type: string
          minLength: 1
        ipaCode:
          description: codice IPA
          type: string
          minLength: 1
        sdiCode:
          description: codice SDI
          type: string
          minLength: 1
        agreementDate:
          description: data sottoscrizione accordo
          example: '2022-07-27T12:22:33.444Z'
          type: string
          format: date-time
        generalContacts:
          $ref: '#/components/schemas/PaContacts'
    PaContacts:
      title: Contact Information
      description: pec, email, tel, www site, ...
      type: object
      properties:
        pec:
          type: string
          format: email
          minLength: 1
        email:
          type: string
          format: email
          minLength: 1
        tel:
          type: string
          pattern: ^\\+?([0-9]|-)*
          minLength: 1
          maxLength: 20
        web:
          type: string
          format: uri
          pattern: http.*
          minLength: 1
        registeredOffice:
          type: string
          description: sede legale
          minLength: 1
    PaGroupList:
      title: Groups defined in Self Care
      description: Contains the list of groups defined in SelfCare
      type: array
      items:
        $ref: '#/components/schemas/PaGroup'
    PaGroup:
      title: Group defined in Self Care
      description: Contains the name list of groups defined in SelfCare
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        status:
          $ref: '#/components/schemas/PaGroupStatus'
    PaGroupStatus:
      title: Status of group defined in Self Care
      description: Contains the name list of groups defined in SelfCare
      type: string
      enum:
        - ACTIVE
        - SUSPENDED
        - DELETED
    PgGroupList:
      title: Groups defined in Self Care PG (Notifiche digitali)
      description: Contains the list of groups defined in SelfCare PG (Notifiche digitali)
      type: array
      items:
        $ref: '#/components/schemas/PgGroup'
    PgGroup:
      title: Group defined in Self Care PG (Notifiche digitali)
      description: >-
        Contains the name list of groups defined in SelfCare PG (Notifiche
        digitali)
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        status:
          $ref: '#/components/schemas/PgGroupStatus'
    PgGroupStatus:
      title: Status of group defined in Self Care PG (Notifiche digitali)
      description: >-
        Contains the status of groups defined in SelfCare PG (Notifiche
        digitali)
      type: string
      enum:
        - ACTIVE
        - SUSPENDED
        - DELETED
    SelfCarePaId:
      title: The PA id used by self care
      description: An unique ID that identify a Public Administration
      type: string
      minLength: 1
      maxLength: 50
      pattern: ^[ -~ ]*$
    ProductResourceList:
      title: ProductResourceList
      description: Contains the list of products related institution and current user
      type: array
      items:
        $ref: '#/components/schemas/ProductResourcePN'
    ProductResourcePN:
      title: ProductResourcePN
      type: object
      properties:
        createdAt:
          type: string
          description: Date the products was activated/created
          format: date-time
        depictImageUrl:
          type: string
          description: Product's depiction image url
        description:
          type: string
          description: Product's description
        id:
          type: string
          description: Product's unique identifier
        identityTokenAudience:
          type: string
          description: Product's identity token audience
        logo:
          type: string
          description: Product's logo url
        logoBgColor:
          pattern: ^#0-9A-F6$
          type: string
          description: Product logo's background color
        parentId:
          type: string
          description: Root parent of the sub product
        roleManagementURL:
          type: string
          description: Url of the utilities management
        roleMappings:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ProductRoleInfoResPN'
          description: Mappings between Party's and Product's role
        title:
          type: string
          description: Product's title
        urlBO:
          type: string
          description: >-
            URL that redirects to the back-office section where is possible to
            manage the product
        urlPublic:
          type: string
          description: URL that redirects to the public information webpage of the product
    ProductRoleInfoResPN:
      title: ProductRoleInfoResPN
      required:
        - multiroleAllowed
        - roles
      type: object
      properties:
        multiroleAllowed:
          type: boolean
          description: Flag indicating if a User can have more than one product role
          example: false
        roles:
          type: array
          items:
            $ref: '#/components/schemas/ProductRolePN'
          description: Available product roles
    ProductRolePN:
      title: ProductRolePN
      required:
        - code
        - description
        - label
      type: object
      properties:
        code:
          type: string
          description: Product role internal code
        description:
          type: string
          description: Product role description
        label:
          type: string
          description: Product role label
    ProblemError:
      properties:
        code:
          description: Internal code of the error, in human-readable format
          example: >-
            PN_PARAMETER_TOO_LONG | PN_PARAMETER_TOO_SHORT | PN_DUPLICATE_ENTRY
            | etc...
          type: string
        element:
          description: Parameter or request body field name for validation error
          example: body.order.item[2].quantity
          type: string
        detail:
          description: >-
            A human readable explanation specific to this occurrence of the
            problem.
          example: Parameter not valid
          maxLength: 1024
          type: string
      required:
        - code
    Problem:
      properties:
        type:
          description: URI reference of type definition
          type: string
        status:
          description: >-
            The HTTP status code generated by the origin server for this
            occurrence of the problem.
          type: number
          example: 503
          maximum: 600
          minimum: 100
          exclusiveMaximum: true
        title:
          description: >-
            A short, summary of the problem type. Written in english and
            readable
          example: Service Unavailable
          maxLength: 64
          pattern: ^[ -~]{0,64}$
          type: string
        detail:
          description: A human readable explanation of the problem.
          example: Request took too long to complete.
          maxLength: 4096
          pattern: ^.{0,4096}$
          type: string
        traceId:
          description: Internal support identifier associated to error
          example: 123e4567-e89b-12d3-a456-426614174000
          type: string
        timestamp:
          description: date and time referred to UTC
          example: '2022-07-27T12:22:33.444Z'
          type: string
          format: date-time
        errors:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/ProblemError'
      required:
        - status
        - errors
    PaymentInfoRequests:
      title: Requests for payment info
      description: List of request payment info containing sender and payment id
      type: array
      minItems: 1
      items:
        $ref: '#/components/schemas/PaymentInfoRequest'
    PaymentInfoRequest:
      title: Request for a payment info
      description: Object containing sender and payment id
      type: object
      properties:
        creditorTaxId:
          $ref: '#/components/schemas/paTaxId'
        noticeCode:
          $ref: '#/components/schemas/noticeCode'
      required:
        - creditorTaxId
        - noticeCode
    PaymentInfoResponse:
      title: Response for payment info requests
      description: List of payment info
      type: array
      minItems: 1
      items:
        $ref: '#/components/schemas/PaymentInfoV21'
    PaymentInfoV21:
      title: Payment brief information
      description: Payment minimal information
      type: object
      required:
        - status
        - creditorTaxId
        - noticeCode
      properties:
        creditorTaxId:
          $ref: '#/components/schemas/paTaxId'
        noticeCode:
          $ref: '#/components/schemas/noticeCode'
        status:
          $ref: '#/components/schemas/PaymentStatus'
        detail:
          $ref: '#/components/schemas/Detail'
        detail_v2:
          $ref: '#/components/schemas/DetailV2'
        errorCode:
          description: error code to show at the user
          type: string
          example: PPT_AUTORIZZAZIONE
        amount:
          description: Amount for required payment in eurocents
          example: 1200
          type: number
        url:
          description: Checkout base url used for check payment info
          example: https://api.uat.platform.pagopa.it/checkout/auth/payments/v2
          type: string
        causaleVersamento:
          description: reason for payment
          type: string
          example: Seconda rata TARI
        dueDate:
          description: payment expiration date
          type: string
          example: '2025-07-31T00:00:00.000Z'
          pattern: ([0-9]{4})-(1[0-2]|0[1-9])-(0[1-9]|1[0-9]|2[0-9]|3[0-1])
    PaymentInfo:
      title: Payment brief information
      description: Payment minimal information
      type: object
      required:
        - status
      properties:
        status:
          $ref: '#/components/schemas/PaymentStatus'
        detail:
          $ref: '#/components/schemas/Detail'
        detail_v2:
          $ref: '#/components/schemas/DetailV2'
        errorCode:
          description: error code to show at the user
          type: string
          example: PPT_AUTORIZZAZIONE
        amount:
          description: Amount for required payment in eurocents
          example: 1200
          type: number
        url:
          description: Checkout base url used for check payment info
          example: https://api.uat.platform.pagopa.it/checkout/auth/payments/v2
          type: string
    PaymentStatus:
      title: Payment status
      example: REQUIRED
      description: |
        Payment status:
          * `REQUIRED` - payment required
          * `SUCCEEDED` - payment done
          * `IN_PROGRESS` - waiting confirm
          * `FAILURE` - error see errorType
      type: string
      enum:
        - REQUIRED
        - SUCCEEDED
        - IN_PROGRESS
        - FAILURE
    Detail:
      title: Error classification
      description: |
        Classification to help user address the issue
          * `PAYMENT_UNAVAILABLE`: Technical Error.
          * `PAYMENT_UNKNOWN`: Payment data error.
          * `DOMAIN_UNKNOWN`: creditor institution error.
          * `PAYMENT_ONGOING`: payment on going.
          * `PAYMENT_EXPIRED`: payment expired.
          * `PAYMENT_CANCELED`: payment cancelled.
          * `PAYMENT_DUPLICATED`: payment duplicated.
          * `GENERIC_ERROR`: generic error.
      example: PAYMENT_UNAVAILABLE
      type: string
      enum:
        - PAYMENT_UNAVAILABLE
        - PAYMENT_UNKNOWN
        - DOMAIN_UNKNOWN
        - PAYMENT_ONGOING
        - PAYMENT_EXPIRED
        - PAYMENT_CANCELED
        - PAYMENT_DUPLICATED
        - GENERIC_ERROR
    DetailV2:
      title: Error classification detail
      description: |
        Classification detail to help user address the issue
      example: PPT_PSP_SCONOSCIUTO
      type: string
    PaymentRequest:
      title: Request to make a payment on Checkout
      type: object
      required:
        - paymentNotice
        - returnUrl
      properties:
        paymentNotice:
          $ref: '#/components/schemas/PaymentNotice'
        returnUrl:
          description: Checkout base url used to make payment
          example: https://api.uat.platform.pagopa.it/checkout/auth/payments/v2
          type: string
          maxLength: 2048
          pattern: ^[ -~ ]*$
    PaymentNotice:
      title: Request for a Payment Notice
      description: Information of a Payment Notice
      type: object
      required:
        - noticeNumber
        - fiscalCode
        - amount
        - companyName
        - description
      properties:
        noticeNumber:
          type: string
          description: The payment notice number
          minLength: 18
          maxLength: 18
          pattern: ^\d+$
        fiscalCode:
          type: string
          description: Public Administration tax code
          minLength: 11
          maxLength: 11
          pattern: ^\d+$
        amount:
          type: number
          description: Amount ( in euro cents ) of the payment notice
          minimum: 1
        companyName:
          type: string
          description: Public Administration company name
          maxLength: 250
          pattern: ^([\x20-\xFF]{1,250})$
        description:
          type: string
          description: Subject of payment
          maxLength: 250
          pattern: ^([\x20-\xFF]{1,250})$
    PaymentResponse:
      title: Response containing the Checkout callback URL
      type: object
      required:
        - checkoutUrl
      properties:
        checkoutUrl:
          type: string
          description: The Checkout callback URL
    UpdateNotificationCostRequest:
      title: Update notification cost information
      type: object
      required:
        - notificationStepCost
        - iun
        - paymentsInfoForRecipients
        - updateCostPhase
      properties:
        notificationStepCost:
          type: number
          description: Single notification step cost (euro-cent)
        iun:
          description: Notification Unique identifier
          type: string
        paymentsInfoForRecipients:
          type: array
          description: Payment information for recipient
          items:
            $ref: '#/components/schemas/PaymentsInfoForRecipient'
        eventTimestamp:
          type: string
          description: event timestamp
          format: date-time
        eventStorageTimestamp:
          type: string
          description: event storage timestamp
          format: date-time
        updateCostPhase:
          type: string
          enum:
            - VALIDATION
            - REQUEST_REFUSED
            - NOTIFICATION_CANCELLED
    PaymentsInfoForRecipient:
      title: Payment information for recipient
      type: object
      required:
        - recIndex
        - creditorTaxId
        - noticeCode
      properties:
        recIndex:
          type: number
          description: recipient index
        creditorTaxId:
          description: Payment PA fiscal code
          example: '77777777777'
          type: string
          maxLength: 11
          minLength: 11
        noticeCode:
          description: Payment notice number  numero avviso
          example: '302000100000019421'
          type: string
          maxLength: 18
          minLength: 18
    UpdateNotificationCostResponse:
      title: Update notification cost response
      type: object
      required:
        - updateResults
      properties:
        updateResults:
          type: array
          description: Update notification cost results
          items:
            $ref: '#/components/schemas/UpdateNotificationCostResult'
    UpdateNotificationCostResult:
      title: Update notification cost results
      type: object
      required:
        - recIndex
        - creditorTaxId
        - noticeCode
        - result
      properties:
        recIndex:
          type: number
          description: recipient index
        creditorTaxId:
          description: Payment PA fiscal code
          example: '77777777777'
          type: string
          maxLength: 11
          minLength: 11
        noticeCode:
          description: Payment notice number  numero avviso
          example: '302000100000019421'
          type: string
          maxLength: 18
          minLength: 18
        result:
          type: string
          enum:
            - OK
            - KO
            - RETRY
    paTaxId:
      description: Payment PA fiscal code
      example: '77777777777'
      type: string
      maxLength: 11
      minLength: 11
      pattern: ^\d+$
    noticeCode:
      description: Payment notice number  numero avviso
      example: '302000100000019421'
      type: string
      maxLength: 18
      minLength: 18
      pattern: ^\d+$
  responses: {}
  securitySchemes:
    pn-auth-fleet_jwtAuthorizer_openapi:
      type: apiKey
      name: Authorization
      in: header
      x-amazon-apigateway-authtype: custom
      x-amazon-apigateway-authorizer:
        authorizerUri: >-
          arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:pn-jwtAuthorizerLambda/invocations
        authorizerResultTtlInSeconds: 300
        identityValidationExpression: ^Bearer\s([a-zA-Z0-9_]+)\.([a-zA-Z0-9_]+)\.([a-zA-Z0-9_\-]+)$
        type: token
tags:
  - name: SelfCare
    description: Integrazione verso portale selfcare
  - name: PaymentInfo
    description: Informazioni sullo stato del pagamento
x-amazon-apigateway-gateway-responses:
  DEFAULT_5XX:
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Origin: '''*'''
  DEFAULT_4XX:
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Origin: '''*'''
  BAD_REQUEST_PARAMETERS:
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Origin: '''*'''
    responseTemplates:
      application/json: >-
        {"status": 400, "title": "VALIDATION ERROR", "traceId":
        "$context.xrayTraceId", "errors": [ { "code": "PN_INVALID_PARAMETERS",
        "detail": "Validation errors: $context.error.validationErrorString" } ]}
  BAD_REQUEST_BODY:
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Origin: '''*'''
    responseTemplates:
      application/json: >-
        {"status": 400, "title": "VALIDATION ERROR", "traceId":
        "$context.xrayTraceId", "errors": [ { "code": "PN_INVALID_BODY",
        "detail": "Validation errors: $context.error.validationErrorString" } ]}
x-amazon-apigateway-request-validators:
  basic:
    validateRequestBody: true
    validateRequestParameters: true
  params-only:
    validateRequestBody: false
    validateRequestParameters: true
x-amazon-apigateway-request-validator: basic
