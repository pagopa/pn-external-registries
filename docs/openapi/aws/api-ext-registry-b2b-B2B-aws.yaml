openapi: 3.0.1
info:
  title: >-
    ${stageVariables.ProjectName}-${stageVariables.MicroServiceUniqueName}-${stageVariables.IntendedUsage}
  version: LjMx26Lpv6SVpGofVt89SF4APMeH10iuClAzIMGpdYE=
servers:
  - url: https://${stageVariables.DnsName}/{basePath}
    variables:
      basePath:
        default: /${stageVariables.ServiceApiPath}
    x-amazon-apigateway-endpoint-configuration:
      disableExecuteApiEndpoint: true
paths:
  /pa/v1/groups:
    get:
      operationId: getGroupsB2B
      summary: Retrieve group of current user defined in Self Care
      description: >
        PA can use groups to better organize work in its organization. Return
        the PaGroupList of the current user, or if the user isn't in some group,
        all the groups of the current PA
      tags:
        - InfoPA
      security:
        - pn-auth-fleet_ApiKeyAuthorizerV2_openapi: []
        - api_key_openapi: []
      parameters:
        - name: statusFilter
          description: Se valorizzato indica di tornare solo i gruppi nello stato passato
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/PaGroupStatus'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaGroupList'
        '400':
          description: Invalid input
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/pa/v1/groups
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters:
          integration.request.header.x-pagopa-pn-cx-id: context.authorizer.cx_id
          integration.request.header.x-pagopa-pn-cx-role: context.authorizer.cx_role
          integration.request.header.x-pagopa-pn-uid: context.authorizer.uid
          integration.request.header.x-pagopa-pn-jti: context.authorizer.cx_jti
          integration.request.header.x-pagopa-pn-src-ch: '''B2B'''
          integration.request.header.x-pagopa-pn-cx-type: context.authorizer.cx_type
          integration.request.header.x-pagopa-pn-cx-groups: context.authorizer.cx_groups
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
    options:
      operationId: Options for /pa/v1/groups API CORS
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/pa/v1/groups
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters: {}
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
components:
  parameters: {}
  schemas:
    PaNameFilter:
      title: Admitted character for PA denomination field
      type: string
      minLength: 3
      maxLength: 250
      pattern: ^([\x20-\xFF]{1,250})$
    PaSummary:
      title: PA in short
      description: PA with minimal information
      type: object
      required:
        - id
        - name
      properties:
        id:
          $ref: '#/components/schemas/SelfCarePaId'
        name:
          type: string
    PaSummariesList:
      title: Brief list of PAs
      description: Contains a list of PA with minimal information
      type: array
      items:
        $ref: '#/components/schemas/PaSummary'
    PaInfo:
      title: PA Info by IPA
      description: Denomination, fiscal code, pec, email, tel, www site, ...
      type: object
      required:
        - id
        - name
        - taxId
        - generalContacts
      properties:
        id:
          $ref: '#/components/schemas/SelfCarePaId'
        name:
          type: string
          minLength: 1
        taxId:
          description: codice fiscale
          type: string
          minLength: 1
        ipaCode:
          description: codice IPA
          type: string
          minLength: 1
        sdiCode:
          description: codice SDI
          type: string
          minLength: 1
        agreementDate:
          description: data sottoscrizione accordo
          example: '2022-07-27T12:22:33.444Z'
          type: string
          format: date-time
        generalContacts:
          $ref: '#/components/schemas/PaContacts'
    PaContacts:
      title: Contact Information
      description: pec, email, tel, www site, ...
      type: object
      properties:
        pec:
          type: string
          format: email
          minLength: 1
        email:
          type: string
          format: email
          minLength: 1
        tel:
          type: string
          pattern: ^\\+?([0-9]|-)*
          minLength: 1
          maxLength: 20
        web:
          type: string
          format: uri
          pattern: http.*
          minLength: 1
        registeredOffice:
          type: string
          description: sede legale
          minLength: 1
    PaGroupList:
      title: Groups defined in Self Care
      description: Contains the list of groups defined in SelfCare
      type: array
      items:
        $ref: '#/components/schemas/PaGroup'
    PaGroup:
      title: Group defined in Self Care
      description: Contains tha name list of groups defined in SelfCare
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        status:
          $ref: '#/components/schemas/PaGroupStatus'
    PaGroupStatus:
      title: Status of group defined in Self Care
      description: Contains tha name list of groups defined in SelfCare
      type: string
      enum:
        - ACTIVE
        - SUSPENDED
    SelfCarePaId:
      title: The PA id used by self care
      description: An unique ID that identify a Public Administration
      type: string
      minLength: 1
      maxLength: 50
      pattern: ^[ -~ ]*$
    ProblemError:
      properties:
        code:
          description: Internal code of the error, in human-readable format
          example: >-
            PN_PARAMETER_TOO_LONG | PN_PARAMETER_TOO_SHORT | PN_DUPLICATE_ENTRY
            | etc...
          type: string
        element:
          description: Parameter or request body field name for validation error
          example: body.order.item[2].quantity
          type: string
        detail:
          description: >-
            A human readable explanation specific to this occurrence of the
            problem.
          example: Parameter not valid
          maxLength: 1024
          type: string
      required:
        - code
    Problem:
      properties:
        type:
          description: URI reference of type definition
          type: string
        status:
          description: >-
            The HTTP status code generated by the origin server for this
            occurrence of the problem.
          type: number
          example: 503
          maximum: 600
          minimum: 100
          exclusiveMaximum: true
        title:
          description: >-
            A short, summary of the problem type. Written in english and
            readable
          example: Service Unavailable
          maxLength: 64
          pattern: ^[ -~]{0,64}$
          type: string
        detail:
          description: A human readable explanation of the problem.
          example: Request took too long to complete.
          maxLength: 4096
          pattern: ^.{0,4096}$
          type: string
        traceId:
          description: Internal support identifier associated to error
          example: 123e4567-e89b-12d3-a456-426614174000
          type: string
        timestamp:
          description: date and time referred to UTC
          example: '2022-07-27T12:22:33.444Z'
          type: string
          format: date-time
        errors:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/ProblemError'
      required:
        - status
        - errors
  responses: {}
  securitySchemes:
    api_key_openapi:
      type: apiKey
      name: x-api-key
      in: header
    pn-auth-fleet_ApiKeyAuthorizerV2_openapi:
      type: apiKey
      name: x-api-key
      in: header
      x-amazon-apigateway-authtype: custom
      x-amazon-apigateway-authorizer:
        authorizerUri: >-
          arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:pn-ApiKeyAuthorizerV2Lambda/invocations
        authorizerResultTtlInSeconds: 300
        identitySource: method.request.header.x-api-key
        type: request
tags:
  - name: SelfCare
    description: Integrazione verso portale selfcare
x-amazon-apigateway-gateway-responses:
  DEFAULT_5XX:
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Origin: '''*'''
  DEFAULT_4XX:
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Origin: '''*'''
  BAD_REQUEST_PARAMETERS:
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Origin: '''*'''
    responseTemplates:
      application/json: >-
        {"status": 400, "title": "VALIDATION ERROR", "traceId":
        "$context.xrayTraceId", "errors": [ { "code": "PN_INVALID_PARAMETERS",
        "detail": "Validation errors: $context.error.validationErrorString" } ]}
  BAD_REQUEST_BODY:
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Origin: '''*'''
    responseTemplates:
      application/json: >-
        {"status": 400, "title": "VALIDATION ERROR", "traceId":
        "$context.xrayTraceId", "errors": [ { "code": "PN_INVALID_BODY",
        "detail": "Validation errors: $context.error.validationErrorString" } ]}
x-amazon-apigateway-request-validators:
  basic:
    validateRequestBody: true
    validateRequestParameters: true
  params-only:
    validateRequestBody: false
    validateRequestParameters: true
x-amazon-apigateway-request-validator: basic
